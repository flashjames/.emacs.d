# bind C-b == prefix + C-b
# bind -n C-b == global C-b

# PRE INSTALL, NEW SYSTEM
# https://askubuntu.com/questions/235866/set-emacs-nw-as-default-editor
# install PathPicker

# -- general -------------------------------------------------------------------

# Custom bindings
set -g prefix C-a

bind C-a send-prefix



set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on



set -g history-limit 5000                 # boost history

# edit configuration

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 2000 # slightly longer pane indicators display time
set -g display-time 2000      # slightly longer status messages display time


# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history



# -- navigation ----------------------------------------------------------------

# create session


# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind 2 split-window -v
# split current window vertically
bind 3 split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"


# -- urlview -------------------------------------------------------------------

bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

bind F run "cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}"





# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from




bind -n M-r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded"
set -g base-index 1
setw -g pane-base-index 1
bind -r M-Up resize-pane -U 5
bind -r M-Down resize-pane -D 5
bind -r M-Left resize-pane -L 5
bind -r M-Right resize-pane -R 5
bind -n M-[ copy-mode
bind -n M-] paste-buffer
bind -T copy-mode C-Left send-keys -X previous-word
bind -T copy-mode C-Right send-keys -X next-word-end
bind -n M-T new-window -n tmux-conf -c ~/.tmux.d/
bind Y setw synchronize-panes \; if-shell "tmux showw -v synchronize-panes | grep on"\
                                          "display 'synchronize-panes on'" \
                                          "display 'synchronize-panes off'"
bind a setw monitor-activity \; if-shell "tmux showw -v monitor-activity | grep on"\
                                         "display 'monitor-activity on'" \
                                         "display 'monitor-activity off'"
bind W command-prompt "rename-window '%%'"

# Emacs bindings
set -g status-keys emacs
setw -g mode-keys emacs
bind g if-shell "cd #{pane_current_path} && git diff" \
                "new-window -n git-diff -c '#{pane_current_path}' '( git diff --color=always --ignore-space-change --ignore-all-space && echo && git -c status.color=always status ) | less -r'"\
                "display 'Not a git repository.'"
bind 0 if-shell "tmux display-message -p '#{window_panes}' | grep -v '^1$'"\
                "kill-pane"\
                "display 'Attempt to delete sole ordinary panel'"
bind 1 run-shell "tmux list-panes | grep -o '%[[:digit:]]\\+' | xargs -I{} sh -c \
                 'if [ #D != {} ]; then tmux kill-pane -t {}; fi'"
# bind 2 split-window -v -c "#{pane_current_path}" \; select-pane -l
# bind 3 split-window -h -c "#{pane_current_path}" \; select-pane -l
bind k confirm-before -p "kill-pane '#W:#P'? (y/n)" kill-pane

bind C-C choose-tree -w

bind -n C-B switch-client -T SWITCHWINDOW
bind -T SWITCHWINDOW 0 select-window -t :=0
bind -T SWITCHWINDOW 1 select-window -t :=1
bind -T SWITCHWINDOW 2 select-window -t :=2
bind -T SWITCHWINDOW 3 select-window -t :=3
bind -T SWITCHWINDOW 4 select-window -t :=4
bind -T SWITCHWINDOW 5 select-window -t :=5
bind -T SWITCHWINDOW 6 select-window -t :=6
bind -T SWITCHWINDOW 7 select-window -t :=7
bind -T SWITCHWINDOW 8 select-window -t :=8
bind -T SWITCHWINDOW 9 select-window -t :=9

# Help mode
bind -n C-h switch-client -T HELP \; display "C-h (Type ? for further options)-"
bind -T HELP k list-keys # Display all key bindings.
bind -T HELP c new-window -n 'Commands' "man -P 'less -p ^COMMANDS' tmux" # Show the Commands tmux man page section.
bind -T HELP v new-window -n 'Variables' "man -P 'less -p \"Variable name\"' tmux" # Show the Variables tmux man page section.
bind -T HELP F new-window -n 'Formats' "man -P 'less -p ^FORMATS' tmux" # Show the Formats tmux man page section.
bind -T HELP h new-window -n 'Hooks' "man -P 'less -p ^HOOKS' tmux" # Show the Hooks tmux man page section.
bind -T HELP H show-hooks -g # Display all active global hooks.
bind -T HELP e new-window -n 'Environment' "man -P 'less -p ^ENVIRONMENT' tmux" # Show the Environment tmux man page section.
bind -T HELP E showenv # Display the active local tmux environment.
bind -T HELP g showenv -g # Display the active global tmux environment.
bind -T HELP o show-options # Display the active local tmux options.
bind -T HELP O show-options -g # Display the active global tmux options.
bind -T HELP w show-window-options # Display the active local tmux _window_ options.
bind -T HELP W show-window-options -g # Display the active global tmux _window_ options.
bind -T HELP m new-window -n 'tmux man page' "man tmux" # Show the tmux man page from the start of the document.
bind -T HELP ? switch-client -T HELP \; new-window -n 'Help Page' "~/.tmux.d/help_doc_gen.py ~/.tmux.conf | less"
bind -T HELP q if-shell "echo #W | grep 'Help Page'" "send-keys q"


# Settings
set -g display-time 2000

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
#bind-key  swap-pane -s :+.top \; rotate-window -Ut :+



# remote tmux
# https://gist.github.com/samoshkin/05e65f7f1c9b55d3fc7690b59d678734


bind -T root -n F2  \
  set prefix None \;\
  set key-table off \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off -n F2 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  refresh-client -S


### END switch remote/local


# ----------------------
# Status Bar
# -----------------------

set-option -g status on                # turn the status bar on
set -g status-interval 1               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

set -g window-status-current-format '#[fg=#d96969,bold]** #[fg=white]#{window_index} #[fg=green]#{pane_current_command} #[fg=#d96969]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=#d96969]** #[fg=white]#|'
set -g window-status-format '#[fg=white]#{window_index} #[fg=green]#{pane_current_command} #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=white]|'

set -g status-left ""

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M



set -g status-right '#[fg=white] #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,} #[reverse]#([ $(tmux show-option -qv key-table) = "off" ] && echo "R: OFF")#[default]'

## END status-bar config



# https://stackoverflow.com/questions/42102839/tmux-list-command-prompt-history
#set -g history-file ~/.tmux_history

setw -g mouse on

# TPM

# IF-NEW-SYSTEM: install tpm first
# https://github.com/tmux-plugins/tpm


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'jbnicolai/tmux-fpp'


set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)




run '~/.tmux/plugins/tpm/tpm'


#set -g default-terminal "xterm-24bit"
#set -g terminal-overrides ',xterm-24bit:Tc'

# clear pane history
bind -n C-k send-keys -R \; send-keys C-l \; clear-history
bind -r C-p run 'less ~/.tmux.conf' \;



# enter copy-mode
bind-key -n F4 copy-mode

#
#bind-key -n ESC-w y copy-pipe "xclip -sel clip -i"


# keybindnings to remember

# tmux-resurecct
#    prefix + Ctrl-s - save
#    prefix + Ctrl-r - restore
# prefix + I - install plugins for tpm
# Emacsclient quit  C-x 5 0
# todo: usq emacsclient
# emacsclient -nw .tmux.conf
# https://musicfreestatic.com/tech/2012/10/emacs-and-tmux/
